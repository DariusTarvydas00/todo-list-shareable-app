version: '3.4'
services:
  nestjs_backend:
    image: "localhost:7002/nestjs_backend"
    build:
      context: todo-list-shareable-backend
      dockerfile: Dockerfile
    env_file:
      - ./environments/test-manual.env
    environment:
      STAGE: dev
      DATABASE_URL: postgres://user:password@postgres:5432/db
      NODE_ENV: development
      DB_TYPE: postgres
      POSTGRES_DB: db
       - POSTGRES_SYNC = false
      JWT_SECRET: anyKey
      POSTGRES_PORT: 5432
      APP_EXPIRES: 3600
      APP_PORT: 3000
      ENABLE_CORS: 'true'
    ports:
      - "3000:3000"
#    volumes:
#      - /node/app/node_modules
    container_name: nestjs_backend
    depends_on:
      - postgres
    networks:
      - net

  postgres:
    image: postgres:14.3-alpine
    restart: always
    container_name: postgres-db
    env_file:
      - environments/test-manual.env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
#    volumes:
#      - db:/var/lib/postgresql/data
    networks:
      - net

  vue_frontend:
    image: vue_frontend
    container_name: vue_frontend
    build:
      context: todo-list-shareable-frontend
      dockerfile: Dockerfile
    links:
      - nestjs_backend
    environment:
      - NODE_ENV=development
    ports:
      - "8084:80"
#    volumes:
#      - ./usr/app/vue:/app
#      - /usr/app/vue/node_modules
    networks:
    - net

  influxdb:
    container_name: influxdb1
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  grafana:
    container_name: grafana1
    image: grafana/grafana:latest
    networks:
      - grafana
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./loadtests/dashboards:/var/lib/grafana/dashboards
      - ./loadtests/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./loadtests/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  k6:
    container_name: k61
    image: grafana/k6:latest
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./loadtests/ewoks.js:/ewoks.js

#volumes:
#  db:
#    driver: local
#  pgadmin-data:

networks:
  grafana:
  k6:
  net:
    driver: bridge

#    version: '3.4'
    #    services:
    #      nestjs_backend:
    #        image: nestjs_backend
    #        build:
    #          context: todo-list-shareable-backend
    #          dockerfile: Dockerfile
    #        environment:
    #          DATABASE_URL: postgres://user:password@postgres:5432/db
    #          NODE_ENV: development
    #          DB_TYPE: postgres
    #          POSTGRES_HOST: postgres-db
    #          POSTGRES_USER: postgres
    #          POSTGRES_PASS: postgres
    #          POSTGRES_DB: todolist
    #            - POSTGRES_SYNC = false
    #          JWT_SECRET: anyKey
    #          POSTGRES_PORT: 5432
    #          APP_EXPIRES: 3600
    #          APP_PORT: 3000
    #        ports:
    #          - "3000:3000"
    #        volumes:
    #          - .nestjs:/node/app:delegated
    #          - /node/app/node_modules
    #        container_name: nestjs-backend
    #        depends_on:
    #          - postgres
    #        networks:
    #          - net
    #
    #      postgres:
    #        image: postgres:14.3-alpine
    #        restart: always
    #        environment:
    #          POSTGRES_USER: user
    #          POSTGRES_PASSWORD: password
    #          POSTGRES_DB: db
    #        container_name: postgres-db
    #        ports:
    #          - "5432:5432"
    #        volumes:
    #          - db:/var/lib/postgresql/data
    #        networks:
    #          - net
    #
    #      postgres_admin:
    #        image: dpage/pgadmin4:4.28
    #        restart: always
    #        container_name: nest-pgadmin4
    #        depends_on:
    #          - postgres
    #        environment:
    #          PGADMIN_DEFAULT_EMAIL: admin@admin.dk
    #          PGADMIN_DEFAULT_PASSWORD: password
    #        ports:
    #          - "8089:80"
    #        volumes:
    #          - ./pgadmin-data:/var/lib/pgadmin
    #
    #      vue_frontend:
    #        image: todo-list-shareable-frontend
    #        build:
    #          context: todo-list-shareable-frontend
    #          dockerfile: Dockerfile
    #        environment:
    #          - NODE_ENV=development
    #        ports:
    #          - "8083:8080"
    #        volumes:
    #          - ./usr/app/vue:/app
    #          - /usr/app/vue/node_modules
    #        networks:
    #          - net
    #
    #    volumes:
    #      db:
    #        driver: local
    #      pgadmin-data:
    #
    #    networks:
    #      net:

#    version: '3.4'
#    services:
#      nestjs_backend:
#        image: nestjs_backend
#        build:
#          context: todo-list-shareable-backend
#          dockerfile: Dockerfile
#        env_file:
#          - ./todo-list-shareable-backend/.env.stage.dev
#        environment:
#          DATABASE_URL: postgres://user:password@postgres:5432/db
#          NODE_ENV: development
#          DB_TYPE: postgres
#          POSTGRES_HOST: postgres
#          POSTGRES_USER: postgres
#          POSTGRES_PASS: postgres
#          POSTGRES_DB: db
#            - POSTGRES_SYNC = false
#          JWT_SECRET: anyKey
#          POSTGRES_PORT: 5432
#          APP_EXPIRES: 3600
#          APP_PORT: 3000
#        ports:
#          - "3000:3000"
#        #    volumes:
#        #      - /node/app/node_modules
#        container_name: nestjs-backend
#        depends_on:
#          - postgres
#        networks:
#          - net
#
#      postgres:
#        image: postgres:14.3-alpine
#        restart: always
#        container_name: postgres-db
#        ports:
#          - "5432:5432"
#        environment:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#          PGDATA: /data/postgres
#        #    volumes:
#        #      - db:/var/lib/postgresql/data
#        networks:
#          - net
#
#      vue_frontend:
#        image: todo-list-shareable-frontend
#        build:
#          context: todo-list-shareable-frontend
#          dockerfile: Dockerfile
#        environment:
#          - NODE_ENV=development
#        ports:
#          - "8082:8081"
#          - "8083:8080"
#        #    volumes:
#        #      - ./usr/app/vue:/app
#        #      - /usr/app/vue/node_modules
#        networks:
#          - net

    #volumes:
    #  db:
    #    driver: local
    #  pgadmin-data:

#    networks:
#      net:
#        driver: bridge

        #    version: '3.4'
        #    services:
        #      nestjs_backend:
        #        image: nestjs_backend
        #        build:
        #          context: todo-list-shareable-backend
        #          dockerfile: Dockerfile
        #        environment:
        #          DATABASE_URL: postgres://user:password@postgres:5432/db
        #          NODE_ENV: development
        #          DB_TYPE: postgres
        #          POSTGRES_HOST: postgres-db
        #          POSTGRES_USER: postgres
        #          POSTGRES_PASS: postgres
        #          POSTGRES_DB: todolist
        #            - POSTGRES_SYNC = false
        #          JWT_SECRET: anyKey
        #          POSTGRES_PORT: 5432
        #          APP_EXPIRES: 3600
        #          APP_PORT: 3000
        #        ports:
        #          - "3000:3000"
        #        volumes:
        #          - .nestjs:/node/app:delegated
        #          - /node/app/node_modules
        #        container_name: nestjs-backend
        #        depends_on:
        #          - postgres
        #        networks:
        #          - net
        #
        #      postgres:
        #        image: postgres:14.3-alpine
        #        restart: always
        #        environment:
        #          POSTGRES_USER: user
        #          POSTGRES_PASSWORD: password
        #          POSTGRES_DB: db
        #        container_name: postgres-db
        #        ports:
        #          - "5432:5432"
        #        volumes:
        #          - db:/var/lib/postgresql/data
        #        networks:
        #          - net
        #
        #      postgres_admin:
        #        image: dpage/pgadmin4:4.28
        #        restart: always
        #        container_name: nest-pgadmin4
        #        depends_on:
        #          - postgres
        #        environment:
        #          PGADMIN_DEFAULT_EMAIL: admin@admin.dk
        #          PGADMIN_DEFAULT_PASSWORD: password
        #        ports:
        #          - "8089:80"
        #        volumes:
        #          - ./pgadmin-data:/var/lib/pgadmin
        #
        #      vue_frontend:
        #        image: todo-list-shareable-frontend
        #        build:
        #          context: todo-list-shareable-frontend
        #          dockerfile: Dockerfile
        #        environment:
        #          - NODE_ENV=development
        #        ports:
        #          - "8083:8080"
        #        volumes:
        #          - ./usr/app/vue:/app
        #          - /usr/app/vue/node_modules
        #        networks:
        #          - net
        #
        #    volumes:
        #      db:
        #        driver: local
        #      pgadmin-data:
        #
        #    networks:
        #      net:

    #version: '3.4'
    #services:
    #  nestjs_backend:
    #    image: nestjs_backend
    #    build:
    #      context: todo-list-shareable-backend
    #      dockerfile: Dockerfile
    #    environment:
    #      - NODE_ENV=development
    #    ports:
    #      - "3000:3000"
    #    volumes:
    #      - .nestjs:/node/app:delegated
    #      - /node/app/node_modules
    #
    #  postgres:
    #    image: postgres:14.3-alpine
    #    environment:
    #      POSTGRES_USER: user
    #      POSTGRES_PASSWORD: password
    #      POSTGRES_DB: db
    #    ports:
    #      - "35000:3000"
    #
    #  postgres_admin:
    #    image: dpage/pgadmin4:4.28
    #    depends_on:
    #      - postgres
    #    environment:
    #      PGADMIN_DEFAULT_EMAIL: admin@admin.dk
    #      PGADMIN_DEFAULT_PASSWORD: password
    #    ports:
    #      - "5050:80"
    #
    #  vue_frontend:
    #    image: todo-list-shareable-frontend
    #    build:
    #      context: todo-list-shareable-frontend
    #      dockerfile: Dockerfile
    #    environment:
    #      - NODE_ENV=development
    #    ports:
    #      - "8082:8080"

#version: '3.4'
#services:
#  nestjs:
#    image: todo-list-shareable-backend
#    build:
#      context: todo-list-shareable-backend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    env_file:
#      - todo-list-shareable-backend/environments/development.env
#    ports:
#      - "3000:${SERVER_PORT}"
#      - "9229:9229"
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#  nestjs:
#    image: todo_list_shareable_backend_development
#    container_name: todo-nestjs
#    build:
#      context: todo-list-shareable-backend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#    ports:
#      - "3000:${SERVER_PORT}"
#      - "9229:9229"
#    networks:
#      - net
#  vue:
#    image: todo_list_shareable_frontend_development
#    container_name: todo-vue
#    build:
#      context: todo-list-shareable-frontend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#    ports:
#      - "8081:${SERVER_PORT}"
#      - "9230:9230"
#    networks:
#      - net
#networks:
#  net:
#version: '3.4'
#services:
#  nestjs:
#    image: todo-list-shareable-backend
#    build:
#      context: todo-list-shareable-backend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#        - NPM_TOKEN=${NPM_TOKEN}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    env_file:
#      - todo-list-shareable-backend/environments/production.env
#    ports:
#      - "3000:${SERVER_PORT}"
#      - "9229:9229"
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#  nestjs:
#    image: todo_list_shareable_backend_development
#    container_name: todo-nestjs
#    build:
#      context: todo-list-shareable-backend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#    ports:
#      - "3000:${SERVER_PORT}"
#      - "9229:9229"
#    networks:
#      - net
#  vue:
#    image: todo_list_shareable_frontend_development
#    container_name: todo-vue
#    build:
#      context: todo-list-shareable-frontend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#    ports:
#      - "8081:${SERVER_PORT}"
#      - "9230:9230"
#    networks:
#      - net
#networks:
#  net:
#version: '3.4'
#services:
#  nestjs:
#    image: todo-list-shareable-backend
#    build:
#      context: todo-list-shareable-backend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    env_file:
#      - todo-list-shareable-backend/environments/development.env
#    ports:
#      - "3000:${SERVER_PORT}"
#      - "9229:9229"
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
##  nestjs:
#    image: todo_list_shareable_backend_development
#    container_name: todo-nestjs
#    build:
#      context: todo-list-shareable-backend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#    ports:
#      - "3000:${SERVER_PORT}"
#      - "9229:9229"
#    networks:
#      - net
#  vue:
#    image: todo_list_shareable_frontend_development
#    container_name: todo-vue
#    build:
#      context: todo-list-shareable-frontend
#      target: ${NODE_ENV}
#      args:
#        - NODE_ENV=${NODE_ENV}
#    environment:
#      - NODE_ENV=${NODE_ENV}
#      - SERVER_PORT=${SERVER_PORT}
#    volumes:
#      - .:/node/app:delegated
#      - /node/app/node_modules
#    ports:
#      - "8081:${SERVER_PORT}"
#      - "9230:9230"
#    networks:
#      - net
#networks:
#  net: